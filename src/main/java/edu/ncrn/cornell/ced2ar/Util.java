package edu.ncrn.cornell.ced2ar;

import java.io.File;

import org.apache.commons.cli.BasicParser;
import org.apache.commons.cli.CommandLineParser;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Options;
import org.springframework.util.StringUtils;

/**
 *
 *@author NCRN Project Team
 * Apache Cli util class.
 * Validates the options f, s and l for the DDI generation process
 * 
 *@author Cornell University, Copyright 2012-2015
 *@author Ben Perry
 *
 *@author Cornell Institute for Social and Economic Research
 *@author Cornell Labor Dynamics Institute
 *@author NCRN Project Team 
 */
public class Util {

	private Options _options = new Options();
	CommandLineParser _parser = new BasicParser();
	
	public Util(){
		_options.addOption("f",true,"(required) Location of STATA file");
    	_options.addOption("s",true,"(optional) Generate summary statistics");
    	_options.addOption("l",true,"(optional) Observation limit");
	}
	
	public CommandLineParser getParser(){
		return _parser;
	}
	
	public Options  getOptions(){
		return _options;
	}
		
	/**
	 * Prints required options
	 */
	public void help(){
		HelpFormatter formatter = new HelpFormatter();
		formatter.printHelp("Options are as follows...", _options );
		System.exit(1);
	}	    
	
	/**
	 * Tests if file exists, exists the program and prints error if it doesn't
	 */
	public static void fileCheck(String path){
    	File od = new File(path);
    	if(!od.exists()){
    		System.out.println("The path '" + path+"' does not exist");
    		System.exit(1);
    	}
	}	
	/**
	 * valid values 
	 * 	f,F or False
	 * 	t,T, or True
	 * 
	 * Summary Statistics are generated by default.
	 * Checks to see if user has entered other options. 
	 * @param summaryStatistics
	 * @param summaryStats
	 */
	public static boolean processSummaryStatisticsCheck(String summaryStatistics) {
		boolean summaryStats = false;
		if(StringUtils.isEmpty(summaryStatistics)) {
			summaryStats = true;
			return summaryStats;
		}
		if(summaryStatistics.startsWith("f") ||
			summaryStatistics.startsWith("F") ||
			summaryStatistics.equalsIgnoreCase("false")) {
			summaryStats = false;
			return summaryStats;
		}
		else if(summaryStatistics.startsWith("t") ||
				summaryStatistics.startsWith("T") ||
				summaryStatistics.equalsIgnoreCase("true") ){
				summaryStats = true;
				return summaryStats;
		}
		else {
			System.out.println("Argument s must be a boolean value if specified. Using default value true.");
    		return true;
		}
	}
	
	/**
	 * All observations are processed by default. 
	 * User can choose any other positive value
	 * @param observationLimit
	 * @param observations
	 */
	public static long observationLimitCheck(String observationLimit) {
		Long observations = -1l;
		if(StringUtils.isEmpty(observationLimit)) { 
			observations = -1l;
			return observations;
		}
		try{
			observations = Long.parseLong(observationLimit);
			if(observations<=0)
				observations = -1l;
			return observations;
		}catch(NumberFormatException e){
			System.out.println("Argument l must be a postive integer if specified. Using default value.");
    		return -1l; 
		}
	}
}